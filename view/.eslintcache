[{"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\index.js":"1","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\reportWebVitals.js":"2","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\App.js":"3","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Authentication\\protectedRoute.js":"4","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Features.jsx":"5","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Home.jsx":"6","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Login.jsx":"7","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Projects.jsx":"8","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Proposals.jsx":"9","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Profile.jsx":"10","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminReports.jsx":"11","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Reports.jsx":"12","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProjects.jsx":"13","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProposals.jsx":"14","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminApplicants.jsx":"15","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminCitizens.jsx":"16","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProfile.jsx":"17","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminHome.jsx":"18","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\LandingLayout.jsx":"19","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminFeatures.jsx":"20","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminProfile.jsx":"21","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminAdministrators.jsx":"22","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminLogin.jsx":"23","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\CitizenLayout.jsx":"24","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\SuperAdminLayout.jsx":"25","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\AdminLayout.jsx":"26","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminMessages.jsx":"27","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Authentication\\auth.js":"28","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Theme\\Theme.js":"29","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Theme\\Styles.js":"30","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\RegisterComponent\\RegisterDialog.jsx":"31","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\AddressDialog.jsx":"32","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\PersonalInfoDialog.jsx":"33","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\CredentialsDialog.jsx":"34","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ExportToolbar\\ExportToolbar.jsx":"35","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Header\\Header.jsx":"36","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Dropzone\\SingleFileDropzone.jsx":"37"},{"size":707,"mtime":1637071481996,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1634287352132,"results":"40","hashOfConfig":"39"},{"size":5280,"mtime":1637389673392,"results":"41","hashOfConfig":"39"},{"size":764,"mtime":1637238342710,"results":"42","hashOfConfig":"39"},{"size":238,"mtime":1634649413850,"results":"43","hashOfConfig":"39"},{"size":226,"mtime":1634649428864,"results":"44","hashOfConfig":"39"},{"size":5327,"mtime":1637091442689,"results":"45","hashOfConfig":"39"},{"size":3851,"mtime":1637108977807,"results":"46","hashOfConfig":"39"},{"size":7971,"mtime":1637108352107,"results":"47","hashOfConfig":"39"},{"size":14448,"mtime":1637238124968,"results":"48","hashOfConfig":"39"},{"size":1731,"mtime":1637109263210,"results":"49","hashOfConfig":"39"},{"size":2949,"mtime":1637109525891,"results":"50","hashOfConfig":"39"},{"size":7134,"mtime":1637329491689,"results":"51","hashOfConfig":"39"},{"size":7650,"mtime":1637291566479,"results":"52","hashOfConfig":"39"},{"size":2192,"mtime":1637290510544,"results":"53","hashOfConfig":"39"},{"size":2084,"mtime":1637251208993,"results":"54","hashOfConfig":"39"},{"size":14497,"mtime":1637401861059,"results":"55","hashOfConfig":"39"},{"size":8555,"mtime":1637331607525,"results":"56","hashOfConfig":"39"},{"size":4014,"mtime":1637060014084,"results":"57","hashOfConfig":"39"},{"size":2866,"mtime":1637331778605,"results":"58","hashOfConfig":"39"},{"size":12343,"mtime":1636779696186,"results":"59","hashOfConfig":"39"},{"size":1968,"mtime":1637243055328,"results":"60","hashOfConfig":"39"},{"size":4773,"mtime":1637245397671,"results":"61","hashOfConfig":"39"},{"size":5774,"mtime":1637563009013,"results":"62","hashOfConfig":"39"},{"size":6661,"mtime":1637242581211,"results":"63","hashOfConfig":"39"},{"size":8464,"mtime":1637402219599,"results":"64","hashOfConfig":"39"},{"size":2913,"mtime":1638177823542,"results":"65","hashOfConfig":"39"},{"size":335,"mtime":1637070760289,"results":"66","hashOfConfig":"39"},{"size":2795,"mtime":1638171441689,"results":"67","hashOfConfig":"39"},{"size":2196,"mtime":1638177945445,"results":"68","hashOfConfig":"39"},{"size":26453,"mtime":1636774214558,"results":"69","hashOfConfig":"39"},{"size":12832,"mtime":1636774146616,"results":"70","hashOfConfig":"39"},{"size":7154,"mtime":1636686172902,"results":"71","hashOfConfig":"39"},{"size":3533,"mtime":1636684280494,"results":"72","hashOfConfig":"39"},{"size":277,"mtime":1636623930484,"results":"73","hashOfConfig":"39"},{"size":442,"mtime":1634290428440,"results":"74","hashOfConfig":"39"},{"size":3354,"mtime":1636543422403,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yktyfp",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\index.js",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\reportWebVitals.js",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\App.js",["175","176"],"import React, { useContext } from \"react\";\nimport { BrowserRouter, Route, useLocation, Switch } from \"react-router-dom\";\nimport LandingLayout from \"./components/UI/Layout/LandingLayout\";\nimport CitizenLayout from \"./components/UI/Layout/CitizenLayout\";\nimport AdminLayout from \"./components/UI/Layout/AdminLayout\";\nimport SuperAdminLayout from \"./components/UI/Layout/SuperAdminLayout\";\nimport Home from \"./pages/Landing/Home\";\nimport Features from \"./pages/Landing/Features\";\nimport Login from \"./pages/Landing/Login\";\nimport Profile from \"./pages/Citizen/Profile\";\nimport Proposals from \"./pages/Citizen/Proposals\";\nimport Projects from \"./pages/Citizen/Projects\";\nimport Reports from \"./pages/Citizen/Reports\";\nimport AdminLogin from \"./pages/Admin/AdminLogin\";\nimport AdminProfile from \"./pages/Admin/AdminProfile\";\nimport AdminProjects from \"./pages/Admin/AdminProjects\";\nimport AdminProposals from \"./pages/Admin/AdminProposals\";\nimport AdminReports from \"./pages/Admin/AdminReports\";\nimport AdminApplicants from \"./pages/Admin/AdminApplicants\";\nimport AdminCitizens from \"./pages/Admin/AdminCitizens\";\nimport AdminMessages from \"./pages/Admin/AdminMessages\";\nimport SuperAdminHome from \"./pages/SuperAdmin/SuperAdminHome\";\nimport SuperAdminFeatures from \"./pages/SuperAdmin/SuperAdminFeatures\";\nimport SuperAdminProfile from \"./pages/SuperAdmin/SuperAdminProfile\";\nimport SuperAdminAdministrators from \"./pages/SuperAdmin/SuperAdminAdministrators\";\nimport { ProtectedRoute, AdminProtectedRoute } from \"./components/Authentication/protectedRoute\";\n\nfunction App() {\n  const currentPath = useLocation();\n \n  const Landing = (props) => {\n    console.log(currentPath.pathname);\n    return (\n      <BrowserRouter>\n        <LandingLayout>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/features\" exact component={Features} />\n            <Route path=\"/login\" exact component={Login} />\n        </LandingLayout>\n      </BrowserRouter>\n    );\n  };\n\n  const Citizen = (props) => {\n    console.log(currentPath.pathname);\n    return (\n      <BrowserRouter>\n        <CitizenLayout>\n            <ProtectedRoute path=\"/citizen/profile\" exact component={Profile} />\n            <ProtectedRoute path=\"/citizen/proposals\" exact component={Proposals} />\n            <ProtectedRoute path=\"/citizen/projects\" exact component={Projects} />\n            <ProtectedRoute path=\"/citizen/reports\" exact component={Reports} />\n        </CitizenLayout>\n      </BrowserRouter>\n    );\n  };\n\n  const Admin = (props) => {\n    console.log(currentPath.pathname);\n    return (\n      <BrowserRouter>\n        <AdminLayout>\n          <AdminProtectedRoute path=\"/admin/profile\" exact component={AdminProfile} />\n          <AdminProtectedRoute path=\"/admin/proposals\" exact component={AdminProposals} />\n          <AdminProtectedRoute path=\"/admin/projects\" exact component={AdminProjects} />\n          <AdminProtectedRoute path=\"/admin/reports\" exact component={AdminReports} />\n          <AdminProtectedRoute path=\"/admin/applicants\" exact component={AdminApplicants} />\n          <AdminProtectedRoute path=\"/admin/citizens\" exact component={AdminCitizens} />\n          <AdminProtectedRoute path=\"/admin/messages\" exact component={AdminMessages} />\n        </AdminLayout>\n      </BrowserRouter>\n    );\n  };\n\n  const SuperAdmin = (props) => {\n    return (\n      <BrowserRouter>\n        <SuperAdminLayout>\n          <Route path=\"/super-admin/profile\" exact component={SuperAdminProfile} />\n          <Route path=\"/super-admin/home\" exact component={SuperAdminHome} />\n          <Route path=\"/super-admin/features\" exact component={SuperAdminFeatures} />\n          <Route path=\"/super-admin/administrators\" exact component={SuperAdminAdministrators} />\n        </SuperAdminLayout>\n      </BrowserRouter>\n    );\n  };\n\n  const LoginRoutes = () => {\n    return (\n      <BrowserRouter>\n        <Route path=\"/admin/login\" exact component={AdminLogin} />\n      </BrowserRouter>\n    );\n  }\n\n  const CurrentLayout = () => {\n    if (\n      currentPath.pathname === \"/\" ||\n      currentPath.pathname === \"/features\" ||\n      currentPath.pathname === \"/login\"\n    ) {\n      return <Landing />;\n    } else if (\n      currentPath.pathname === \"/citizen/profile\" ||\n      currentPath.pathname === \"/citizen/proposals\" ||\n      currentPath.pathname === \"/citizen/projects\" ||\n      currentPath.pathname === \"/citizen/reports\" \n    ) {\n      return <Citizen />;\n    } else if (\n      currentPath.pathname === \"/admin/profile\" ||\n      currentPath.pathname === \"/admin/proposals\" ||\n      currentPath.pathname === \"/admin/projects\" ||\n      currentPath.pathname === \"/admin/reports\" ||\n      currentPath.pathname === \"/admin/applicants\" ||\n      currentPath.pathname === \"/admin/citizens\" || \n      currentPath.pathname === \"/admin/messages\" \n    ) {\n      return <Admin />;\n    } else if (\n      currentPath.pathname === \"/super-admin/profile\" ||\n      currentPath.pathname === \"/super-admin/home\" ||\n      currentPath.pathname === \"/super-admin/features\" ||\n      currentPath.pathname === \"/super-admin/administrators\"\n    ) {\n      return <SuperAdmin />;\n    } else {\n      return <LoginRoutes />\n    }\n  };\n\n  return <React.Fragment>{CurrentLayout()}</React.Fragment>;\n}\n\nexport default App;\n\n\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Authentication\\protectedRoute.js",["177"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../Authentication/auth\";\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => \r\n        localStorage.getItem(\"token\") ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport const AdminProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => \r\n        localStorage.getItem(\"token\") ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to=\"/admin/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Features.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Home.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Landing\\Login.jsx",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Card, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport theme from \"../../components/Theme/Theme\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport RegisterDialog from \"../../components/RegisterComponent/RegisterDialog\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"token\")) {\r\n      history.push(\"/citizen/profile\");\r\n      window.location.reload();\r\n    }\r\n  }, [history]);\r\n\r\n  const onSubmit = async (data) => {\r\n    \r\n    const values = {\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"/citizen/login\", values);\r\n      localStorage.setItem(\"token\", res.data.token);\r\n\r\n      history.push(\"/citizen/profile\")\r\n      window.location.reload();\r\n\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenPopup(false);\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}>\r\n            <h1>Hello</h1>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Card className={classes.paddingPaper}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      render={({ field, formState }) => (\r\n                        <TextField\r\n                          {...register(\"email\", { required: true })}\r\n                          {...field}\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          variant=\"outlined\"\r\n                          label=\"Email address\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          required\r\n                          className={classes.input}\r\n                          InputProps={{\r\n                            classes: {\r\n                              notchedOutline: classes.input,\r\n                            },\r\n                          }}\r\n                          inputProps={{\r\n                            className: classes.input\r\n                          }}\r\n                        />\r\n                      )}\r\n                      control={control}\r\n                      name=\"email\"\r\n                      defaultValue=\"\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Controller\r\n                      render={({ field, formState }) => (\r\n                        <TextField\r\n                          {...register(\"password\", { required: true })}\r\n                          {...field}\r\n                          fullWidth\r\n                          type=\"password\"\r\n                          variant=\"outlined\"\r\n                          label=\"Password\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          required\r\n                          className={classes.input}\r\n                          InputProps={{\r\n                            classes: {\r\n                              notchedOutline: classes.input,\r\n                            },\r\n                          }}\r\n                          inputProps={{\r\n                            className: classes.input\r\n                          }}\r\n                        />\r\n                      )}\r\n                      control={control}\r\n                      name=\"password\"\r\n                      defaultValue=\"\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} className={classes.centerGridItem}>\r\n                    <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                      Login\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.centerGridItem}>\r\n                    <Button color=\"secondary\" type=\"button\">\r\n                      Forgot password\r\n                    </Button>\r\n                    <Button \r\n                      color=\"secondary\" \r\n                      type=\"button\"\r\n                      onClick={() => setOpenPopup(true)}\r\n                    >\r\n                      Create an account\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <RegisterDialog openPopup={openPopup} onClose={handleClose} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Projects.jsx",["179","180"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  ButtonGroup,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  CardMedia,\r\n  Collapse,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: \"primary\",\r\n    padding: \"0\",\r\n    borderRadius: \"15px\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  cardItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: \"10em\",\r\n    paddingTop: \"56.35%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Projects = () => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/projects/all\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      // console.log(response.data.doc);\r\n      setProjects(response.data.doc);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container justifyContent=\"center\">\r\n          <h3>Button Group</h3>\r\n          <Grid container spacing={4}>\r\n            {projects &&\r\n              projects.map((project) => (\r\n                <Grid item xs={12} key={project._id}>\r\n                  <Card className={classes.card}>\r\n                    <CardHeader\r\n                      title=\"Lelouch Lamperouge\"\r\n                      subheader=\"October 20, 2021\"\r\n                    />\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image=\"https://images.pexels.com/photos/428321/pexels-photo-428321.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\" gutterBottom>\r\n                        {project.title}\r\n                      </Typography>\r\n                      <Typography paragraph variant=\"body2\" component=\"p\">\r\n                        {project.caption}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <IconButton\r\n                        className={clsx(classes.expand, {\r\n                          [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"Show more\"\r\n                      >\r\n                        <ExpandMoreIcon />\r\n                      </IconButton>\r\n                    </CardActions>\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                      <CardContent>\r\n                        <Typography paragraph>\r\n                          {project.description}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Collapse>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Proposals.jsx",["181","182"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  ButtonGroup,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Collapse,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\r\nimport ThumbUpRoundedIcon from \"@material-ui/icons/ThumbUpRounded\";\r\nimport ThumbDownRoundedIcon from \"@material-ui/icons/ThumbDownRounded\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: \"primary\",\r\n    padding: \"0\",\r\n    borderRadius: \"15px\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  cardItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: \"10em\",\r\n    paddingTop: \"56.35%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Proposals = () => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [proposals, setProposals] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/proposals/all\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      // console.log(response.data.doc)\r\n      setProposals(response.data.doc);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container justifyContent=\"center\">\r\n          <h3>Button group</h3>\r\n          <Grid container spacing={4}>\r\n            {proposals &&\r\n              proposals.map((proposal) => (\r\n                <Grid item xs={12} key={proposal._id}>\r\n                  <Card className={classes.card}>\r\n                    <CardHeader\r\n                      title=\"Lelouch Lamperouge\"\r\n                      subheader=\"October 20, 2021\"\r\n                    />\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image=\"https://images.pexels.com/photos/428321/pexels-photo-428321.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\" gutterBottom>\r\n                        {proposal.title}\r\n                      </Typography>\r\n                      <Typography paragraph variant=\"body2\" component=\"p\">\r\n                        {proposal.caption}\r\n                      </Typography>\r\n                      <Typography>Likes: {proposal.like}</Typography>\r\n                      <Typography>Dislikes: {proposal.dislike}</Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                      <IconButton>\r\n                        <ThumbUpRoundedIcon />\r\n                      </IconButton>\r\n                      <IconButton>\r\n                        <ThumbDownRoundedIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        className={clsx(classes.expand, {\r\n                          [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"Show more\"\r\n                      >\r\n                        <ExpandMoreIcon />\r\n                      </IconButton>\r\n                    </CardActions>\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                      <CardContent>\r\n                        <Typography>\r\n                          {proposal.description}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Collapse>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n\r\n            {/* <Grid item xs={12}>\r\n              <Card className={classes.card}>\r\n                <CardHeader title=\"Lelouch Lamperouge\" subheader=\"October 20, 2021\" />\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image=\"https://images.pexels.com/photos/2253415/pexels-photo-2253415.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Proposal Title\r\n                  </Typography>\r\n                  <Typography paragraph variant=\"body2\" component=\"p\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                    do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    Duis aute irure dolor in reprehenderit in voluptate velit\r\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n                    occaecat cupidatat non proident, sunt in culpa qui officia\r\n                    deserunt mollit anim id est laborum.\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                  <IconButton>\r\n                    <ThumbUpRoundedIcon />\r\n                  </IconButton>\r\n                  <IconButton>\r\n                    <ThumbDownRoundedIcon />\r\n                  </IconButton>\r\n                  <IconButton\r\n                    className={clsx(classes.expand, {\r\n                      [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"Show more\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                  <CardContent>\r\n                    <Typography paragraph variant=\"body2\" component=\"p\">\r\n                      Sed ut perspiciatis unde omnis iste natus error sit\r\n                      voluptatem accusantium doloremque laudantium, totam rem\r\n                      aperiam, eaque ipsa quae ab illo inventore veritatis et\r\n                      quasi architecto beatae vitae dicta sunt explicabo. Nemo\r\n                      enim ipsam voluptatem quia voluptas sit aspernatur aut\r\n                      odit aut fugit, sed quia consequuntur magni dolores eos\r\n                      qui ratione voluptatem sequi nesciunt. Neque porro\r\n                      quisquam est, qui dolorem ipsum quia dolor sit amet,\r\n                      consectetur, adipisci velit, sed quia non numquam eius\r\n                      modi tempora incidunt ut labore et dolore magnam aliquam\r\n                      quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\r\n                      exercitationem ullam corporis suscipit laboriosam, nisi ut\r\n                      aliquid ex ea commodi consequatur? Quis autem vel eum iure\r\n                      reprehenderit qui in ea voluptate velit esse quam nihil\r\n                      molestiae consequatur, vel illum qui dolorem eum fugiat\r\n                      quo voluptas nulla pariatur?\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Collapse>\r\n              </Card>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Proposals;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Profile.jsx",["183"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport PhotoCameraRoundedIcon from \"@material-ui/icons/PhotoCameraRounded\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\nimport PersonalInfoDialog from \"../../components/ProfileDialogs/PersonalInfoDialog\";\r\nimport AddressDialog from \"../../components/ProfileDialogs/AddressDialog\";\r\nimport CredentialsDialog from \"../../components/ProfileDialogs/CredentialsDialog\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [openPersonalDialog, setOpenPersonalDialog] = useState(false);\r\n  const [openAddressDialog, setOpenAddressDialog] = useState(false);\r\n  const [openCredentialsDialog, setOpenCredentialsDialog] = useState(false);\r\n  \r\n  const [privateData, setPrivateData] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [suffix, setSuffix] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [houseNo, setHouseNo] = useState(\"\");\r\n  const [barangay, setBarangay] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    if(!localStorage.getItem(\"token\")) {\r\n      history.push(\"/citizen/profile\")\r\n    }\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getMe\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setPrivateData(response.data.doc);\r\n      setFirstName(response.data.doc.firstname);\r\n      setLastName(response.data.doc.lastname);\r\n      setMiddleName(response.data.doc.middlename);\r\n      setSuffix(response.data.doc.suffix);\r\n      setSex(response.data.doc.sex);\r\n      setBirthday(response.data.doc.birthday);\r\n      setHouseNo(response.data.doc.houseNo);\r\n      setBarangay(response.data.doc.barangay);\r\n      setCity(response.data.doc.city);\r\n      setProvince(response.data.doc.province);\r\n      setZip(response.data.doc.zip);\r\n      setRegion(response.data.doc.region);\r\n      setEmail(response.data.doc.email);\r\n      setPassword(response.data.doc.password);\r\n    }\r\n\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handlePersonalClose = () => {\r\n    setOpenPersonalDialog(false);\r\n  };\r\n\r\n  const handleAddressClose = () => {\r\n    setOpenAddressDialog(false);\r\n  };\r\n\r\n  const handleCredentialsClose = () => {\r\n    setOpenCredentialsDialog(false);\r\n  };\r\n\r\n  const firstNameZero = firstName.charAt(0);\r\n  const lastNameZero = lastName.charAt(0);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container style={{ marginBottom: \"100px\" }}>\r\n          <Grid item container spacing={5}>\r\n            <Grid item>\r\n              <Avatar\r\n                style={{ width: \"130px\", height: \"130px\", fontSize: \"24px\" }}\r\n              >\r\n                {firstNameZero + lastNameZero}\r\n              </Avatar>\r\n            </Grid>\r\n            <Grid item container md={6} sm={6} xs={12} alignItems=\"center\">\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography variant=\"h4\">{firstName + \" \" + lastName}</Typography>\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography>Citizen</Typography>\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.inputFile}\r\n                  id=\"change-photo\"\r\n                  type=\"file\"\r\n                />\r\n                <label htmlFor=\"change-photo\">\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <PhotoCameraRoundedIcon\r\n                      fontSize=\"medium\"\r\n                      color=\"secondary\"\r\n                    />\r\n                  </IconButton>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------PERSONAL INFORMATION---------------------------------------- */}\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Personal Information\r\n          <IconButton\r\n            id=\"editPersonalInfo\"\r\n            aria-label=\"update info\"\r\n            type=\"button\"\r\n            onClick={() => setOpenPersonalDialog(true)}\r\n          >\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Last name\"\r\n              name=\"lastname\"\r\n              id=\"lastname\"\r\n              value={lastName}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"First name\"\r\n              name=\"firstname\"\r\n              id=\"firstname\"\r\n              value={firstName}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Middle name\"\r\n              name=\"middlename\"\r\n              id=\"middlename\"\r\n              value={middleName === \"\" ? \"-\" : middleName}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Suffix\"\r\n              name=\"suffix\"\r\n              id=\"suffix\"\r\n              value={suffix === \"\" ? \"-\" : suffix}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Sex\"\r\n              name=\"sex\"\r\n              id=\"sex\"\r\n              value={sex}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Birthday\"\r\n              name=\"birthday\"\r\n              id=\"birthday\"\r\n              value={birthday}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------ADDRESS---------------------------------------- */}\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Home Address\r\n          <IconButton\r\n            id=\"editAddress\"\r\n            aria-label=\"update address\"\r\n            type=\"button\"\r\n            onClick={() => setOpenAddressDialog(true)}\r\n          >\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"House No.\"\r\n              name=\"houseNo\"\r\n              id=\"houseNo\"\r\n              value={houseNo}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Barangay\"\r\n              name=\"barangay\"\r\n              id=\"barangay\"\r\n              value={barangay}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"City/Municipality\"\r\n              name=\"city\"\r\n              id=\"city\"\r\n              value={city}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Province\"\r\n              name=\"province\"\r\n              id=\"province\"\r\n              value={province}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Zip\"\r\n              name=\"zip\"\r\n              id=\"zip\"\r\n              value={zip}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Region\"\r\n              name=\"region\"\r\n              id=\"region\"\r\n              value={region}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------LOGIN CREDENTIALS---------------------------------------- */}\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Login Credentials\r\n          <IconButton\r\n            id=\"editCredentials\"\r\n            aria-label=\"update credentials\"\r\n            type=\"button\"\r\n            onClick={() => setOpenCredentialsDialog(true)}\r\n          >\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      <PersonalInfoDialog openPopup={openPersonalDialog} onClose={handlePersonalClose} />\r\n      <AddressDialog openPopup={openAddressDialog} onClose={handleAddressClose} />\r\n      <CredentialsDialog openPopup={openCredentialsDialog} onClose={handleCredentialsClose} />\r\n\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminReports.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Citizen\\Reports.jsx",["184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  ButtonGroup,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  Container,\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: \"primary\",\r\n    padding: \"0\",\r\n    borderRadius: \"15px\",\r\n    maxWidth: \"50em\",\r\n    margin: \"auto\",\r\n  },\r\n  cardItem: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: \"2em\",\r\n    paddingTop: \"56.35%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Reports = () => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/reports/all\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      //console.log(response.data.doc);\r\n      setReports(response.data.doc);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container justifyContent=\"center\">\r\n          <h3>Button Group</h3>\r\n          <Grid container spacing={4}>\r\n            {reports &&\r\n              reports.map((report) => (\r\n                <Grid item xs={12} key={report._id}>\r\n                  <Card className={classes.card}>\r\n                    <CardHeader\r\n                      title=\"Lelouch Lamperouge\"\r\n                      subheader=\"October 20, 2021\"\r\n                    />\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image=\"https://images.pexels.com/photos/428321/pexels-photo-428321.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\">{report.title}</Typography>\r\n                      <Typography paragraph variant=\"body2\" component=\"p\">\r\n                        {report.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProjects.jsx",["192","193","194"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ExportToolbar from \"../../components/ExportToolbar/ExportToolbar\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst columns = [\r\n  { field: \"_id\", headerName: \"ID\", width: 230 },\r\n  { field: \"title\", headerName: \"Proposal Title\", width: 200 },\r\n  { field: \"location\", headerName: \"Location\", width: 200 },\r\n  { field: \"status\", headerName: \"Status\", width: 200 },\r\n];\r\n\r\nconst AdminProjects = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/projects/all\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      // console.log(response.data.doc);\r\n      setRows(response.data.doc);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Projects\r\n        </Typography>\r\n        <div className={classes.adminTables}>\r\n          <DataGrid\r\n            getRowId={(row) => row._id}\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            components={{\r\n              Toolbar: ExportToolbar,\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n        <div>\r\n          <Typography variant=\"h4\" gutterBottom>Create a Project</Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction=\"column\"\r\n              className={classes.gridMarginBottom}\r\n            >\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller \r\n                  render={({ field, formState }) => (\r\n                    <TextField \r\n                      {...register(\"title\", { required: true } )}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Project Title\"\r\n                      placeholder=\"Project Title\"\r\n                      name=\"title\"\r\n                      id=\"title\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input\r\n                        }\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"title\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller \r\n                  render={({ field, formState }) => (\r\n                    <TextField \r\n                      {...register(\"caption\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Caption\"\r\n                      placeholder=\"Caption\"\r\n                      name=\"caption\"\r\n                      id=\"caption\"\r\n                      fullWidth\r\n                      required\r\n                      multiline\r\n                      minRows=\"2\"\r\n                      maxRows=\"5\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"caption\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller \r\n                  render={({ field, formState }) => (\r\n                    <TextField \r\n                      {...register(\"description\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Description\"\r\n                      placeholder=\"Description\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      fullWidth\r\n                      required\r\n                      multiline\r\n                      minRows=\"5\"\r\n                      maxRows=\"10\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"description\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller \r\n                  render={({ field, formState }) => (\r\n                    <TextField \r\n                      {...register(\"location\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Location\"\r\n                      placeholder=\"Location\"\r\n                      name=\"location\"\r\n                      id=\"location\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"location\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              <Grid item sm={4} xs={6}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"reset\">\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item sm={4} xs={6}>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminProjects;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProposals.jsx",["195","196","197"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ExportToolbar from \"../../components/ExportToolbar/ExportToolbar\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\n// function ExportToolbar() {\r\n//   return (\r\n//     <GridToolbarContainer>\r\n//       <GridToolbarExport />\r\n//     </GridToolbarContainer>\r\n//   );\r\n// }\r\n\r\nconst columns = [\r\n  { field: \"_id\", headerName: \"ID\", width: 230 },\r\n  { field: \"title\", headerName: \"Proposal Title\", width: 200 },\r\n  { field: \"location\", headerName: \"Location\", width: 200 },\r\n  { field: \"like\", headerName: \"Like\", width: 120 },\r\n  { field: \"dislike\", headerName: \"Dislike\", width: 120 },\r\n  { field: \"status\", headerName: \"Status\", width: 200 },\r\n];\r\n\r\nconst AdminProposals = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/proposals/all\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      // console.log(response.data.doc)\r\n      setRows(response.data.doc);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const onSubmit = async (data) => {\r\n    const values = {\r\n      title: data.title,\r\n      caption: data.caption,\r\n      description: data.description,\r\n      location: data.location,\r\n    };\r\n\r\n    console.log(values);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h2\" gutterBottom>Proposals</Typography>\r\n        <div className={classes.adminTables}>\r\n          <DataGrid\r\n            getRowId={(row) => row._id}\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            components={{\r\n              Toolbar: ExportToolbar,\r\n            }}\r\n          />\r\n        </div>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n        <div>\r\n          <Typography variant=\"h4\" gutterBottom >Create a Proposal</Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction=\"column\"\r\n              className={classes.gridMarginBottom}\r\n            >\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"title\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Proposal Title\"\r\n                      name=\"title\"\r\n                      id=\"title\"\r\n                      placeholder=\"Proposal Title\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"title\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"caption\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Caption\"\r\n                      name=\"caption\"\r\n                      id=\"caption\"\r\n                      placeholder=\"Caption\"\r\n                      fullWidth\r\n                      required\r\n                      multiline\r\n                      minRows=\"2\"\r\n                      maxRows=\"5\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"caption\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"description\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Description\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      placeholder=\"Description\"\r\n                      fullWidth\r\n                      required\r\n                      multiline\r\n                      minRows=\"5\"\r\n                      maxRows=\"10\"\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"description\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"location\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Location\"\r\n                      name=\"location\"\r\n                      id=\"location\"\r\n                      placeholder=\"Location\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"location\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              style={{ marginTop: \"20px\" }}\r\n            >\r\n              <Grid item sm={4} xs={6}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"reset\">\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item sm={4} xs={6}>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminProposals;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminApplicants.jsx",["198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ExportToolbar from \"../../components/ExportToolbar/ExportToolbar\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst columns = [\r\n  { field: \"_id\", headerName: \"ID\", width: 230 },\r\n  { field: \"lastname\", headerName: \"Last name\", width: 230 },\r\n  { field: \"firstname\", headerName: \"First name\", width: 230 },\r\n  { field: \"middlename\", headerName: \"Middle name\", width: 230 },\r\n  { field: \"suffix\", headerName: \"Suffix\", width: 120 },\r\n  { field: \"sex\", headerName: \"Sex\", width: 100 },\r\n  { field: \"birthday\", headerName: \"Birthday\", width: 200 },\r\n  { field: \"role\", headerName: \"Role\", width: 200 },\r\n  { field: \"status\", headerName: \"Status\", width: 200 },\r\n];\r\n\r\nconst AdminApplicants = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getAllApplicants\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      // console.log(response.data.doc)\r\n      setRows(response.data.applicants);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Applicants\r\n        </Typography>\r\n        <div className={classes.adminTables}>\r\n          <DataGrid\r\n            getRowId={(row) => row._id}\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            components={{\r\n              Toolbar: ExportToolbar,\r\n            }}\r\n          />\r\n        </div>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminApplicants;","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminCitizens.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminProfile.jsx",["207"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport PhotoCameraRoundedIcon from '@material-ui/icons/PhotoCameraRounded';\r\nimport axios from \"axios\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\nimport PersonalInfoDialog from \"../../components/ProfileDialogs/PersonalInfoDialog\";\r\nimport AddressDialog from \"../../components/ProfileDialogs/AddressDialog\";\r\nimport CredentialsDialog from \"../../components/ProfileDialogs/CredentialsDialog\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst AdminProfile = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [openPersonalDialog, setOpenPersonalDialog] = useState(false);\r\n  const [openAddressDialog, setOpenAddressDialog] = useState(false);\r\n  const [openCredentialsDialog, setOpenCredentialsDialog] = useState(false);\r\n\r\n  const [privateData, setPrivateData] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [suffix, setSuffix] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [houseNo, setHouseNo] = useState(\"\");\r\n  const [barangay, setBarangay] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [zip, setZip] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(!localStorage.getItem(\"token\")) {\r\n      history.push(\"/admin/profile\")\r\n    }\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getMe\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setPrivateData(response.data.doc);\r\n\r\n      setFirstName(response.data.doc.firstname);\r\n      setLastName(response.data.doc.lastname);\r\n      setMiddleName(response.data.doc.middlename);\r\n      setSuffix(response.data.doc.suffix);\r\n      setSex(response.data.doc.sex);\r\n      setBirthday(response.data.doc.birthday);\r\n      setHouseNo(response.data.doc.houseNo);\r\n      setBarangay(response.data.doc.barangay);\r\n      setCity(response.data.doc.city);\r\n      setProvince(response.data.doc.province);\r\n      setZip(response.data.doc.zip);\r\n      setRegion(response.data.doc.region);\r\n      setEmail(response.data.doc.email);\r\n      setPassword(response.data.doc.password);\r\n    }\r\n\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handlePersonalClose = () => {\r\n    setOpenPersonalDialog(false);\r\n  };\r\n\r\n  const handleAddressClose = () => {\r\n    setOpenAddressDialog(false);\r\n  };\r\n\r\n  const handleCredentialsClose = () => {\r\n    setOpenCredentialsDialog(false);\r\n  };\r\n\r\n  const firstNameZero = firstName.charAt(0);\r\n  const lastNameZero = lastName.charAt(0);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container style={{ marginBottom: \"100px\" }}>\r\n          <Grid item container spacing={5}>\r\n            <Grid item>\r\n              <Avatar\r\n                style={{ width: \"130px\", height: \"130px\", fontSize: \"24px\" }}\r\n              >\r\n                {firstNameZero + lastNameZero}\r\n              </Avatar>\r\n\r\n            </Grid>\r\n            <Grid item container md={6} sm={6} xs={12} alignItems=\"center\">\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography variant=\"h4\">{firstName + lastName}</Typography>\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography>Administrator</Typography>\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <input accept=\"image/*\" className={classes.inputFile} id=\"change-photo\" type=\"file\" />\r\n                <label htmlFor=\"change-photo\">\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <PhotoCameraRoundedIcon fontSize=\"medium\" color=\"secondary\" />\r\n                  </IconButton>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------PERSONAL INFORMATION---------------------------------------- */}\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Personal Information\r\n          <IconButton id=\"editPersonalInfo\" aria-label=\"update info\" type=\"button\" onClick={() => setOpenPersonalDialog(true)}>\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Last name\"\r\n              name=\"lastname\"\r\n              id=\"lastname\"\r\n              value={lastName}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"First name\"\r\n              name=\"firstname\"\r\n              id=\"firstname\"\r\n              value={firstName}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Middle name\"\r\n              name=\"middlename\"\r\n              id=\"middlename\"\r\n              value={middleName === \"\" ? \"(No indicated data)\" : middleName }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Suffix\"\r\n              name=\"suffix\"\r\n              id=\"suffix\"\r\n              value={suffix === \"\" ? \"(No indicated data)\" : suffix }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Sex\"\r\n              name=\"sex\"\r\n              id=\"sex\"\r\n              value={sex}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Birthday\"\r\n              name=\"birthday\"\r\n              id=\"birthday\"\r\n              value={birthday === \" \" ? \"(No indicated data)\" : birthday }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------ADDRESS---------------------------------------- */}\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Home Address\r\n          <IconButton id=\"editAddress\" aria-label=\"update address\" type=\"button\" onClick={() => setOpenAddressDialog(true)}>\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"House No.\"\r\n              name=\"houseNo\"\r\n              id=\"houseNo\"\r\n              value={houseNo === \" \" ? \"(No indicated data)\" : houseNo}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Barangay\"\r\n              name=\"barangay\"\r\n              id=\"barangay\"\r\n              value={barangay === \" \" ? \"(No indicated data)\" : barangay}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"City/Municipality\"\r\n              name=\"city\"\r\n              id=\"city\"\r\n              value={city === \" \" ? \"(No indicated data)\" : city }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Province\"\r\n              name=\"province\"\r\n              id=\"province\"\r\n              value={province === \" \" ? \"(No indicated data)\" : province }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Zip\"\r\n              name=\"zip\"\r\n              id=\"zip\"\r\n              value={zip === \" \" || zip === 0 ? \"(No indicated data)\" : zip }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Region\"\r\n              name=\"region\"\r\n              id=\"region\"\r\n              value={region === \" \" ? \"(No indicated data)\" : region }\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* ----------------------------------------LOGIN CREDENTIALS---------------------------------------- */}\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Login Credentials\r\n          <IconButton id=\"editCredentials\" aria-label=\"update credentials\" type=\"button\" onClick={() => setOpenCredentialsDialog(true)}>\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              defaultValue=\"(No indicated data)\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <PersonalInfoDialog openPopup={openPersonalDialog} onClose={handlePersonalClose} />\r\n      <AddressDialog openPopup={openAddressDialog} onClose={handleAddressClose} />\r\n      <CredentialsDialog openPopup={openCredentialsDialog} onClose={handleCredentialsClose} />\r\n\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminHome.jsx",["208","209"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst SuperAdminHome = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Edit contents of Home page\r\n        </Typography>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Header\r\n          <IconButton id=\"editHeader\" aria-label=\"update header\" type=\"button\">\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} style={{ marginBottom: \"40px\" }}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Header Name\"\r\n              name=\"headerName\"\r\n              id=\"headerName\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Tagline\"\r\n              name=\"tagline\"\r\n              id=\"tagline\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Logo\"\r\n              name=\"logo\"\r\n              id=\"logo\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Partner Communities, Users, and Members\r\n          <IconButton id=\"editPartners\" aria-label=\"update partners\" type=\"button\">\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} style={{ marginBottom: \"40px\" }}>\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Partner Communities\"\r\n              name=\"partners\"\r\n              id=\"partners\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Users\"\r\n              name=\"users\"\r\n              id=\"users\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Members\"\r\n              name=\"members\"\r\n              id=\"members\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Features Summary\r\n          <IconButton id=\"editFeaturesSummary\" aria-label=\"update features\" type=\"button\">\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} style={{ marginBottom: \"40px\" }}>\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Feature 1\"\r\n              name=\"feature1\"\r\n              id=\"feature1\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Feature 2\"\r\n              name=\"feature2\"\r\n              id=\"feature2\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={4} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Feature 3\"\r\n              name=\"feature3\"\r\n              id=\"feature3\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Message from the Director\r\n          <IconButton id=\"editMessage\" aria-label=\"update message\" type=\"button\">\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n        <Grid container spacing={3} style={{ marginBottom: \"40px\" }}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Image\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Message\"\r\n              name=\"message\"\r\n              id=\"message\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SuperAdminHome;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\LandingLayout.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminFeatures.jsx",["210","211"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst SuperAdminFeatures = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Edit contents of Features page\r\n        </Typography>\r\n        <Divider style={{ marginBottom: \"40px\" }} />\r\n\r\n        <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n          Feature 1\r\n          <IconButton\r\n            id=\"editFeature1\"\r\n            aria-label=\"update feature1\"\r\n            type=\"button\"\r\n          >\r\n            <EditRoundedIcon fontSize=\"small\" color=\"secondary\" />\r\n          </IconButton>\r\n        </Typography>\r\n\r\n        <Grid container spacing={3} style={{ marginBottom: \"40px\" }} direction=\"column\">\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Name\"\r\n              name=\"ame\"\r\n              id=\"name\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              id=\"description\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Logo\"\r\n              name=\"logo\"\r\n              id=\"logo\"\r\n              value=\"Edit this in backend\"\r\n              fullWidth\r\n              disabled\r\n              InputProps={{\r\n                classes: {\r\n                  notchedOutline: classes.input,\r\n                },\r\n              }}\r\n              inputProps={{\r\n                className: classes.input,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SuperAdminFeatures;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminProfile.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\SuperAdmin\\SuperAdminAdministrators.jsx",["212","213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ExportToolbar from \"../../components/ExportToolbar/ExportToolbar\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst columns = [\r\n  { field: \"_id\", headerName: \"ID\", width: 230 },\r\n  { field: \"lastname\", headerName: \"Last name\", width: 230 },\r\n  { field: \"firstname\", headerName: \"First name\", width: 230 },\r\n  { field: \"middlename\", headerName: \"Middle name\", width: 230 },\r\n  { field: \"suffix\", headerName: \"Suffix\", width: 120 },\r\n  { field: \"role\", headerName: \"Role\", width: 200 },\r\n];\r\n\r\nconst SuperAdminAdministrators = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getAllAdministrators\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      // console.log(response.data.doc)\r\n      setRows(response.data.administrators);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          List of Administrators\r\n        </Typography>\r\n        <div className={classes.adminTables}>\r\n            <DataGrid\r\n            getRowId={(row) => row._id}\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            components={{\r\n                Toolbar: ExportToolbar,\r\n            }}\r\n            />\r\n        </div>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SuperAdminAdministrators;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminLogin.jsx",["215","216","217","218","219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\nimport RegisterDialog from \"../../components/RegisterComponent/RegisterDialog\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup.string().required(),\r\n});\r\n\r\nconst AdminLogin = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"token\")) {\r\n      history.push(\"/admin/profile\");\r\n      window.location.reload();\r\n    }\r\n  }, [history]);\r\n\r\n  const onSubmit = async (data) => {\r\n    const values = {\r\n        email: data.email,\r\n        password: data.password\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(\"/admin/login\", values);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n\r\n        history.push(\"/admin/profile\");\r\n        window.location.reload();\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"sm\">\r\n        <div className={classes.adminLoginPaper}>\r\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={5}>\r\n              <Grid item xs={12}>\r\n                <div className={classes.adminLoginTypography}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Admin Login\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"email\", { required: true })}\r\n                      {...field}\r\n                      fullWidth\r\n                      type=\"email\"\r\n                      variant=\"outlined\"\r\n                      label=\"Email address\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      required\r\n                      className={classes.input}\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"email\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"password\", { required: true })}\r\n                      {...field}\r\n                      fullWidth\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      required\r\n                      className={classes.input}\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"password\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} className={classes.centerGridItem}>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.centerGridItem}>\r\n                <Button color=\"secondary\" type=\"button\">\r\n                  Forgot password\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\CitizenLayout.jsx",["221"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Tabs,\r\n  Tab,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  SwipeableDrawer,\r\n  useMediaQuery,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Header from \"../Header/Header\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarMargin: {\r\n    ...theme.mixins.toolbar,\r\n    marginBottom: \"3em\",\r\n  },\r\n  drawerIconContainer: {\r\n    marginLeft: \"auto\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  drawerIcon: {\r\n    height: \"37px\",\r\n    width: \"37px\",\r\n    color: \"#000\",\r\n  },\r\n  drawer: {\r\n    backgroundColor: \"#f0f0f3\",\r\n  },\r\n}));\r\n\r\nconst CitizenLayout = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const openMenu = Boolean(anchorEl);\r\n\r\n  const [privateData, setPrivateData] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getMe\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setPrivateData(response.data.doc);\r\n\r\n      setFirstName(response.data.doc.firstname);\r\n      setLastName(response.data.doc.lastname);\r\n    }\r\n\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const firstNameZero = firstName.charAt(0);\r\n  const lastNameZero = lastName.charAt(0);\r\n\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\">\r\n        <Tab component={Link} to=\"/citizen/profile\" label=\"Profile\" />\r\n        <Tab component={Link} to=\"/citizen/proposals\" label=\"Proposals\" />\r\n        <Tab component={Link} to=\"/citizen/projects\" label=\"Projects\" />\r\n        <Tab component={Link} to=\"/citizen/reports\" label=\"Reports\" />\r\n      </Tabs>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const drawer = (\r\n    <React.Fragment>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        anchor=\"right\"\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        PaperProps={{\r\n          classes: {\r\n            root: classes.drawer,\r\n          },\r\n        }}\r\n      >\r\n        <List disablePadding={true}>\r\n          <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(0);\r\n            }}\r\n            button\r\n            component={Link}\r\n            to=\"/citizen/profile\"\r\n            selected={value === 0}\r\n          >\r\n            <ListItemText>Profile</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(1);\r\n            }}\r\n            button\r\n            component={Link}\r\n            to=\"/citizen/proposals\"\r\n            selected={value === 1}\r\n          >\r\n            <ListItemText>Proposals</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(2);\r\n            }}\r\n            button\r\n            component={Link}\r\n            to=\"/citizen/projects\"\r\n            selected={value === 2}\r\n          >\r\n            <ListItemText>Projects</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            onClick={() => {\r\n              setOpenDrawer(false);\r\n              setValue(3);\r\n            }}\r\n            button\r\n            component={Link}\r\n            to=\"/citizen/reports\"\r\n            selected={value === 3}\r\n          >\r\n            <ListItemText>Reports</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        className={classes.drawerIconContainer}\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n      >\r\n        <MenuIcon className={classes.drawerIcon} />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header>\r\n        <Typography>SmartCTzen</Typography>\r\n        {matches ? drawer : tabs}\r\n        <IconButton disableRipple onClick={handleMenu} >\r\n          <Avatar>{firstNameZero +  lastNameZero}</Avatar>\r\n        </IconButton>\r\n        <Menu \r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={openMenu}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem component={Link} to=\"/citizen/profile\" onClick={handleClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        </Menu>\r\n      </Header>\r\n      <div className={classes.toolbarMargin}></div>\r\n      <main>{props.children}</main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CitizenLayout;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\SuperAdminLayout.jsx",["222"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport SupervisorAccountRoundedIcon from '@material-ui/icons/SupervisorAccountRounded';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#ff5039\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    backgroundColor: \"#f0f0f3\",\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whitespace: \"nowrap\",\r\n  },\r\n  drawerUI: {\r\n    backgroundColor: \"#f0f0f3\",\r\n  },\r\n  drawerOpen: {\r\n    backgroundColor: \"#f0f0f3\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SuperAdminLayout = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <ArrowForwardIosRoundedIcon />\r\n          </IconButton>\r\n          <Typography noWrap>SmartCTzen</Typography>\r\n          <IconButton disableRipple style={{ marginLeft: 'auto' }} onClick={handleMenu}>\r\n            <Avatar>S</Avatar>\r\n          </IconButton>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={openMenu}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem component={Link} to=\"/super-admin/profile\" onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        PaperProps={{\r\n          classes: {\r\n            root: classes.drawerUI,\r\n          },\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={Link} to=\"/super-admin/profile\">\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Profile</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/super-admin/home\">\r\n            <ListItemIcon>\r\n              <EmojiEmotionsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Home</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/super-admin/features\">\r\n            <ListItemIcon>\r\n              <BusinessIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Features</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/super-admin/administrators\">\r\n            <ListItemIcon>\r\n              <SupervisorAccountRoundedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Administrators</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminLayout;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Layout\\AdminLayout.jsx",["223","224","225","226"],"import React, { useState, useEffect} from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, useTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport GroupAddRoundedIcon from '@material-ui/icons/GroupAddRounded';\r\nimport GroupRoundedIcon from '@material-ui/icons/GroupRounded';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport { useHistory } from \"react-router\";\r\nimport theme from \"../../Theme/Theme\";\r\nimport axios from \"axios\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#ff5039\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    backgroundColor: \"#f0f0f3\",\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerUI: {\r\n    backgroundColor: \"#f0f0f3\",\r\n  },\r\n  drawerOpen: {\r\n    backgroundColor: \"#f0f0f3\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst AdminLayout = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n\r\n  const [privateData, setPrivateData] = useState();\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   if(!localStorage.getItem(\"token\")) {\r\n  //     history.push(\"/admin/login\")\r\n  //   }\r\n  // }, [history]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      const response = await axios.get(\"/getMe\", {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n      });\r\n      setPrivateData(response.data.doc);\r\n      setFirstName(response.data.doc.firstname);\r\n      setLastName(response.data.doc.lastname);\r\n    }\r\n\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const firstNameZero = firstName.charAt(0);\r\n  const lastNameZero = lastName.charAt(0);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <ArrowForwardIosRoundedIcon />\r\n          </IconButton>\r\n          <Typography noWrap>SmartCTzen</Typography>\r\n          <IconButton disableRipple style={{ marginLeft: \"auto\" }} onClick={handleMenu}>\r\n            <Avatar>{firstNameZero +  lastNameZero}</Avatar>\r\n          </IconButton>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={openMenu}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem component={Link} to=\"/admin/profile\" onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        PaperProps={{\r\n          classes: {\r\n            root: classes.drawerUI,\r\n          },\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={Link} to=\"/admin/profile\">\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Profile</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/proposals\">\r\n            <ListItemIcon>\r\n              <EmojiEmotionsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Proposals</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/projects\">\r\n            <ListItemIcon>\r\n              <BusinessIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Projects</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/reports\">\r\n            <ListItemIcon>\r\n              <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Reports</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/applicants\">\r\n            <ListItemIcon>\r\n              <GroupAddRoundedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Applicants</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/citizens\">\r\n            <ListItemIcon>\r\n              <GroupRoundedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Citizens</ListItemText>\r\n          </ListItem>\r\n\r\n          <ListItem button component={Link} to=\"/admin/messages\">\r\n            <ListItemIcon>\r\n              <ChatRoundedIcon />\r\n            </ListItemIcon>\r\n            <ListItemText>Messages</ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\pages\\Admin\\AdminMessages.jsx",["227","228","229","230","231"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  TextField,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"../../components/Theme/Styles\";\r\nimport theme from \"../../components/Theme/Theme\";\r\n\r\nconst OtherMessage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item md={8} sm={12} xs={12}>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>J</Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            className={classes.otherMessage}\r\n            primary=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n          />\r\n        </ListItem>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst OwnMessage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justifyContent=\"flex-end\">\r\n      <Grid item>\r\n        <ListItem>\r\n          <ListItemText className={classes.ownMessage} primary=\"Hi it's me\" />\r\n        </ListItem>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst AdminMessages = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Grid container spacing={5}>\r\n          <Grid item sm={3} xs={3}>\r\n            <Box className={classes.conversationsPanel}>\r\n              <List>\r\n                <ListItem button>\r\n                  <ListItemAvatar>\r\n                    <Avatar>J</Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Joshua Saps\" />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button>\r\n                  <ListItemAvatar>\r\n                    <Avatar>J</Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary=\"Joshua Saps\" />\r\n                </ListItem>\r\n              </List>\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item sm={8} xs={8}>\r\n            <Typography>Chat box here</Typography>\r\n            <List>\r\n              <OtherMessage />\r\n              <OtherMessage />\r\n              <OtherMessage />\r\n              <OtherMessage />\r\n              <OwnMessage />\r\n              <OwnMessage />\r\n              <OwnMessage />\r\n              <OwnMessage />\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AdminMessages;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Authentication\\auth.js",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Theme\\Theme.js",["232"],"import { createTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst neumorphicWhite = \"#f0f0f3\";\r\nconst neumorphicOrange = \"#ff5039\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: `${neumorphicWhite}`,\r\n        },\r\n        secondary: {\r\n            main: `${neumorphicOrange}`,\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: 'Raleway',\r\n    }\r\n});\r\n\r\ntheme.props = {\r\n    MuiFormLabel: {\r\n        focused: false,\r\n    },\r\n}\r\n\r\ntheme.overrides = {\r\n    MuiAppBar: {\r\n        root: {\r\n            color: 'primary',\r\n            boxShadow: '10px 10px 30px rgba(174, 174, 192, 0.4)',\r\n            borderRadius: '0px 0px 40px 40px',\r\n            justifyContent: 'center',\r\n            padding: '13px'\r\n        },\r\n    },\r\n    MuiTabs: {\r\n        root: {\r\n            marginLeft: \"auto\",\r\n        }\r\n    },\r\n    MuiTab: {\r\n        root: {\r\n            textTransform: 'none',\r\n            color: \"#000\",\r\n            marginLeft: \"25px\",\r\n            \"&:active\": {\r\n              color: \"#ff5039\"\r\n            },\r\n            \"&:hover\": {\r\n              color: \"#ff5039\"\r\n            }\r\n        },\r\n    },\r\n    MuiPaper: {\r\n        root: {\r\n            backgroundColor: `${neumorphicWhite}`,\r\n            padding: '2em',\r\n        },\r\n        rounded: {\r\n            borderRadius: '22px'   \r\n        },\r\n        outlined: {\r\n            outline: 'none'\r\n        },\r\n        elevation1: {\r\n            boxShadow: '10px 10px 30px rgba(174, 174, 192, 0.4), -10px -10px 30px #FFFFFF',\r\n        }\r\n    },\r\n    MuiTextField: {\r\n        root: {\r\n            backgroundColor: 'primary',\r\n            boxShadow: 'inset -10px -10px 10px rgba(255, 255, 255, 0.7), inset 10px 10px 10px rgba(174, 174, 192, 0.2)',\r\n            borderRadius: '13px',\r\n            outline: 'none',\r\n        },\r\n    },\r\n    MuiFormLabel: {\r\n        filled: {\r\n            color: 'primary'\r\n        }\r\n    },\r\n    MuiButton: {\r\n        root: {\r\n            textTransform: 'none'\r\n        },\r\n        contained: {\r\n            boxShadow: '-10px -10px 30px #FFFFFF, 10px 10px 30px rgba(174, 174, 192, 0.4)',\r\n            borderRadius: '30px',\r\n            padding: '9px',\r\n            width: '150px',\r\n            textTransform: 'none'\r\n        }\r\n    },\r\n    MuiDrawer: {\r\n        root: {\r\n            backgroundColor: 'secondary'\r\n        },\r\n    },\r\n    MuiSelect: {\r\n        root: {\r\n            backgroundColor: 'primary',\r\n            boxShadow: 'inset -10px -10px 10px rgba(255, 255, 255, 0.7), inset 10px 10px 10px rgba(174, 174, 192, 0.2)',\r\n            borderRadius: '13px',\r\n            outline: 'none',\r\n        },\r\n    },\r\n    MuiAutocomplete: {\r\n        root: {\r\n            border: 'none',\r\n            outline: 'none'\r\n        }\r\n    }\r\n}\r\n\r\nexport default theme;","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Theme\\Styles.js",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\RegisterComponent\\RegisterDialog.jsx",["233","234","235","236","237","238","239","240"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  DialogActions,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport axios from \"axios\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport SingleFileDropzone from \"../Dropzone/SingleFileDropzone\";\r\nimport useStyles from \"../Theme/Styles\";\r\n\r\nconst sexes = [\r\n  {\r\n    value: \"male\",\r\n    label: \"Male\",\r\n  },\r\n  {\r\n    value: \"female\",\r\n    label: \"Female\",\r\n  },\r\n];\r\n\r\nconst provinces = [\r\n  { value: \"Abra\", label: \"Abra\" },\r\n  { value: \"Agusan del Norte\", label: \"Agusan del Norte\" },\r\n  { value: \"Agusan del Sur\", label: \"Agusan del Sur\" },\r\n  { value: \"Aklan\", label: \"Aklan\" },\r\n  { value: \"Albay\", label: \"Albay\" },\r\n  { value: \"Antique\", label: \"Antique\" },\r\n  { value: \"Apayao\", label: \"Apayao\" },\r\n  { value: \"Aurora\", label: \"Aurora\" },\r\n  { value: \"Basilan\", label: \"Basilan\" },\r\n  { value: \"Bataan\", label: \"Bataan\" },\r\n  { value: \"Batanes\", label: \"Batanes\" },\r\n  { value: \"Batangas\", label: \"Batangas\" },\r\n  { value: \"Benguet\", label: \"Benguet\" },\r\n  { value: \"Biliran\", label: \"Biliran\" },\r\n  { value: \"Bohol\", label: \"Bohol\" },\r\n  { value: \"Bukidnon\", label: \"Bukidnon\" },\r\n  { value: \"Bulacan\", label: \"Bulacan\" },\r\n  { value: \"Cagayan\", label: \"Cagayan\" },\r\n  { value: \"Camarines Norte\", label: \"Camarines Norte\" },\r\n  { value: \"Camarines Sur\", label: \"Camarines Sur\" },\r\n  { value: \"Camiguin\", label: \"Camiguin\" },\r\n  { value: \"Capiz\", label: \"Capiz\" },\r\n  { value: \"Catanduanes\", label: \"Catanduanes\" },\r\n  { value: \"Cavite\", label: \"Cavite\" },\r\n  { value: \"Cebu\", label: \"Cebu\" },\r\n  { value: \"Cotabato\", label: \"Cotabato\" },\r\n  { value: \"Davao de Oro\", label: \"Davao de Oro\" },\r\n  { value: \"Davao del Norte\", label: \"Davao del Norte\" },\r\n  { value: \"Davao del Sur\", label: \"Davao del Sur\" },\r\n  { value: \"Davao Occidental\", label: \"Davao Occidental\" },\r\n  { value: \"Davao Oriental\", label: \"Davao Oriental\" },\r\n  { value: \"Dinagat Islands\", label: \"Dinagat Islands\" },\r\n  { value: \"Eastern Samar\", label: \"Eastern Samar\" },\r\n  { value: \"Guimaras\", label: \"Guimaras\" },\r\n  { value: \"Ifugao\", label: \"Ifugao\" },\r\n  { value: \"Ilocos Norte\", label: \"Ilocos Norte\" },\r\n  { value: \"Ilocos Sur\", label: \"Ilocos Sur\" },\r\n  { value: \"Iloilo\", label: \"Iloilo\" },\r\n  { value: \"Isabela\", label: \"Isabela\" },\r\n  { value: \"Kalinga\", label: \"Kalinga\" },\r\n  { value: \"La Union\", label: \"La Union\" },\r\n  { value: \"Laguna\", label: \"Laguna\" },\r\n  { value: \"Lanao del Norte\", label: \"Lanao del Norte\" },\r\n  { value: \"Lanao del Sur\", label: \"Lanao del Sur\" },\r\n  { value: \"Leyte\", label: \"Leyte\" },\r\n  { value: \"Maguindanao\", label: \"Maguindanao\" },\r\n  { value: \"Marinduque\", label: \"Marinduque\" },\r\n  { value: \"Masbate\", label: \"Masbate\" },\r\n  { value: \"Metro Manila\", label: \"Metro Manila\" },\r\n  { value: \"Misamis Occidental\", label: \"Misamis Occidental\" },\r\n  { value: \"Misamis Oriental\", label: \"Misamis Oriental\" },\r\n  { value: \"Mountain Province\", label: \"Mountain Province\" },\r\n  { value: \"Negros Occidental\", label: \"Negros Occidental\" },\r\n  { value: \"Negros Oriental\", label: \"Negros Oriental\" },\r\n  { value: \"Northern Samar\", label: \"Northern Samar\" },\r\n  { value: \"Nueva Ecija\", label: \"Nueva Ecija\" },\r\n  { value: \"Nueva Vizcaya\", label: \"Nueva Vizcaya\" },\r\n  { value: \"Occiedental Mindoro\", label: \"Occiedental Mindoro\" },\r\n  { value: \"Oriental Mindoro\", label: \"Oriental Mindoro\" },\r\n  { value: \"Palawan\", label: \"Palawan\" },\r\n  { value: \"Pampanga\", label: \"Pampanga\" },\r\n  { value: \"Pangasinan\", label: \"Pangasinan\" },\r\n  { value: \"Quezon\", label: \"Quezon\" },\r\n  { value: \"Quirino\", label: \"Quirino\" },\r\n  { value: \"Rizal\", label: \"Rizal\" },\r\n  { value: \"Romblon\", label: \"Romblon\" },\r\n  { value: \"Samar\", label: \"Samar\" },\r\n  { value: \"Sarangani\", label: \"Sarangani\" },\r\n  { value: \"Siquijor\", label: \"Siquijor\" },\r\n  { value: \"Sorsogon\", label: \"Sorsogon\" },\r\n  { value: \"South Cotabato\", label: \"South Cotabato\" },\r\n  { value: \"Southern Leyte\", label: \"Southern Leyte\" },\r\n  { value: \"Sultan Kudarat\", label: \"Sultan Kudarat\" },\r\n  { value: \"Sulu\", label: \"Sulu\" },\r\n  { value: \"Surigao del Norte\", label: \"Surigao del Norte\" },\r\n  { value: \"Surigao del Sur\", label: \"Surigao del Sur\" },\r\n  { value: \"Tarlac\", label: \"Tarlac\" },\r\n  { value: \"Zambales\", label: \"Zambales\" },\r\n  { value: \"Zamboanga del Norte\", label: \"Zamboanga del Norte\" },\r\n  { value: \"Zamboange del Sur\", label: \"Zamboange del Sur\" },\r\n  { value: \"Zamboanga Sibugay\", label: \"Zamboanga Sibugay\" },\r\n];\r\n\r\nconst regions = [\r\n  { value: \"Region I (Ilocos Region)\", label: \"Region I (Ilocos Region)\" },\r\n  { value: \"Region II (Cagayan Valley)\", label: \"Region II (Cagayan Valley)\" },\r\n  { value: \"Region III (Central Luzon)\", label: \"Region III (Central Luzon)\" },\r\n  { value: \"Region IV-A (CALABARZON)\", label: \"Region IV-A (CALABARZON)\" },\r\n  { value: \"Region V (Bicol Region)\", label: \"Region V (Bicol Region)\" },\r\n  {\r\n    value: \"Region VI (Western Visayas)\",\r\n    label: \"Region VI (Western Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region VII (Central Visayas)\",\r\n    label: \"Region VII (Central Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region VIII (Eastern Visayas)\",\r\n    label: \"Region VIII (Eastern Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region IX (Zamboanga Peninsula)\",\r\n    label: \"Region IX (Zamboanga Peninsula)\",\r\n  },\r\n  {\r\n    value: \"Region X (Northern Mindanao)\",\r\n    label: \"Region X (Northern Mindanao)\",\r\n  },\r\n  { value: \"Region XI (SOCCSKSARGEN)\", label: \"Region XI (SOCCSKSARGEN)\" },\r\n  { value: \"Region XIII (Caraga)\", label: \"Region XIII (Caraga)\" },\r\n  {\r\n    value: \"NCR (National Capital Region)\",\r\n    label: \"NCR (National Capital Region)\",\r\n  },\r\n  {\r\n    value: \"CAR (Cordillera Administrative Region)\",\r\n    label: \"CAR (Cordillera Administrative Region)\",\r\n  },\r\n  {\r\n    value: \"BARMM (Bangsamoro Autonomous Region in Muslim Mindanao)\",\r\n    label: \"BARMM (Bangsamoro Autonomous Region in Muslim Mindanao)\",\r\n  },\r\n  { value: \"MIMAROPA Region\", label: \"MIMAROPA Region\" },\r\n];\r\n\r\nconst RegisterDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { openPopup, setOpenPopup, onClose } = props;\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  const CustomPopper = (props) => {\r\n    return <Popper {...props} className={classes.popper} />;\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const values = {\r\n      lastname: data.lastname,\r\n      firstname: data.firstname,\r\n      middlename: data.middlename,\r\n      suffix: data.suffix,\r\n      sex: data.sex,\r\n      birthday: data.birthday,\r\n      houseNo: data.houseNo,\r\n      barangay: data.barangay,\r\n      city: data.city,\r\n      province: data.province,\r\n      zip: data.zip,\r\n      region: data.region,\r\n      email: data.email,\r\n      password: data.password,\r\n      identificationCard: data.identificationCard,\r\n      proofOfResidency: data.proofOfResidency\r\n    };\r\n\r\n    console.log(values);\r\n\r\n    //await axios.post(\"/registerCitizen\", values);\r\n    // console.log(res.data);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      onClose={handleClose}\r\n      maxWidth=\"lg\"\r\n      fullWidth\r\n      PaperProps={{ classes: { root: classes.dialog } }}\r\n    >\r\n      <DialogTitle>Create an account</DialogTitle>\r\n      <DialogContent>\r\n        <Container>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* ----------------------------------------PERSONAL INFORMATION---------------------------------------- */}\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Personal Information\r\n            </Typography>\r\n            <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"lastname\", { required: true })}\r\n                      {...field}\r\n                      variant=\"outlined\"\r\n                      label=\"Last name\"\r\n                      name=\"lastname\"\r\n                      id=\"lastname\"\r\n                      placeholder=\"Last name\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"lastname\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"firstname\", { required: true })}\r\n                      {...field}\r\n                      label=\"First name\"\r\n                      placeholder=\"First name\"\r\n                      name=\"firstname\"\r\n                      id=\"firstname\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"firstname\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"middlename\", { required: false })}\r\n                      {...field}\r\n                      label=\"Middle name (Optional)\"\r\n                      placeholder=\"Middle name (Optional)\"\r\n                      name=\"middlename\"\r\n                      id=\"middlename\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"middlename\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"suffix\", { required: false })}\r\n                      {...field}\r\n                      label=\"Suffix (Optional)\"\r\n                      placeholder=\"Suffix (Optional)\"\r\n                      name=\"suffix\"\r\n                      id=\"suffix\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"suffix\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <Autocomplete\r\n                      {...register(\"sex\", { required: true })}\r\n                      id=\"sex\"\r\n                      options={sexes}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option) => option.value}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          {...field}\r\n                          name=\"sex\"\r\n                          label=\"Sex\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                  name=\"sex\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        {...register(\"birthday\", { required: true })}\r\n                        {...field}\r\n                        format=\"MM/dd/yyyy\"\r\n                        id=\"birthday\"\r\n                        name=\"birthday\"\r\n                        label=\"Birthday\"\r\n                        inputVariant=\"outlined\"\r\n                        KeyboardButtonProps={{\r\n                          color: \"secondary\",\r\n                        }}\r\n                        required\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  )}\r\n                  name=\"birthday\"\r\n                  control={control}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* ----------------------------------------HOME ADDRESS---------------------------------------- */}\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Home address\r\n            </Typography>\r\n            <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"houseNo\", { required: true })}\r\n                      {...field}\r\n                      label=\"House No.\"\r\n                      placeholder=\"House No.\"\r\n                      name=\"houseNo\"\r\n                      id=\"houseNo\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"houseNo\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"barangay\", { required: true })}\r\n                      {...field}\r\n                      label=\"Barangay\"\r\n                      placeholder=\"Barangay\"\r\n                      name=\"barangay\"\r\n                      id=\"barangay\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"barangay\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"city\", { required: true })}\r\n                      {...field}\r\n                      label=\"City/Municipality\"\r\n                      placeholder=\"City/Municipality\"\r\n                      name=\"city\"\r\n                      id=\"city\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"city\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <Autocomplete\r\n                      {...register(\"province\", { required: true })}\r\n                      id=\"province\"\r\n                      options={provinces}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option) => option.value}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          {...field}\r\n                          name=\"province\"\r\n                          label=\"Province\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                  name=\"province\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"zip\", { required: true })}\r\n                      {...field}\r\n                      type=\"number\"\r\n                      label=\"Zip\"\r\n                      placeholder=\"Zip\"\r\n                      name=\"zip\"\r\n                      id=\"zip\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"zip\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={4} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <Autocomplete\r\n                      {...register(\"region\", { required: true })}\r\n                      id=\"region\"\r\n                      options={regions}\r\n                      getOptionLabel={(option) => option.label}\r\n                      getOptionSelected={(option) => option.value}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          {...field}\r\n                          name=\"region\"\r\n                          label=\"Region\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      )}\r\n                    />\r\n                  )}\r\n                  name=\"region\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* ----------------------------------------LOGIN CREDENTIALS---------------------------------------- */}\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Login Credentials\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              className={classes.gridMarginBottom}\r\n              direction=\"column\"\r\n            >\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"email\", { required: true })}\r\n                      {...field}\r\n                      type=\"email\"\r\n                      label=\"Email address\"\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"email\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"password\", { required: true })}\r\n                      {...field}\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"password\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <TextField\r\n                      {...register(\"confirmPassword\", { required: true })}\r\n                      {...field}\r\n                      type=\"password\"\r\n                      label=\"Confirm Password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      name=\"confirmPassword\"\r\n                      id=\"confirmPassword\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required\r\n                      InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.input,\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        className: classes.input,\r\n                      }}\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"confirmPassword\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/*  */}\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Documents\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography>Identification Card</Typography>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <SingleFileDropzone\r\n                    {...register(\"identificationCard\", { required: true })}\r\n                    {...field}\r\n                    id=\"identificationCard\"\r\n                    name=\"identificationCard\"\r\n                    required\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"identificationCard\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n              <Grid item sm={12} xs={12}>\r\n                <Typography>Proof of Residency</Typography>\r\n                <Controller\r\n                  render={({ field, formState }) => (\r\n                    <SingleFileDropzone\r\n                    {...register(\"proofOfResidency\", { required: true })}\r\n                    {...field}\r\n                    id=\"proofOfResidency\"\r\n                    name=\"proofOfResidency\"\r\n                    required\r\n                    />\r\n                  )}\r\n                  control={control}\r\n                  name=\"proofOfResidency\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid>\r\n              <DialogActions>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RegisterDialog;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\AddressDialog.jsx",["241","242","243","244","245","246"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport useStyles from \"../Theme/Styles\";\r\n\r\nconst provinces = [\r\n  { value: \"Abra\", label: \"Abra\" },\r\n  { value: \"Agusan del Norte\", label: \"Agusan del Norte\" },\r\n  { value: \"Agusan del Sur\", label: \"Agusan del Sur\" },\r\n  { value: \"Aklan\", label: \"Aklan\" },\r\n  { value: \"Albay\", label: \"Albay\" },\r\n  { value: \"Antique\", label: \"Antique\" },\r\n  { value: \"Apayao\", label: \"Apayao\" },\r\n  { value: \"Aurora\", label: \"Aurora\" },\r\n  { value: \"Basilan\", label: \"Basilan\" },\r\n  { value: \"Bataan\", label: \"Bataan\" },\r\n  { value: \"Batanes\", label: \"Batanes\" },\r\n  { value: \"Batangas\", label: \"Batangas\" },\r\n  { value: \"Benguet\", label: \"Benguet\" },\r\n  { value: \"Biliran\", label: \"Biliran\" },\r\n  { value: \"Bohol\", label: \"Bohol\" },\r\n  { value: \"Bukidnon\", label: \"Bukidnon\" },\r\n  { value: \"Bulacan\", label: \"Bulacan\" },\r\n  { value: \"Cagayan\", label: \"Cagayan\" },\r\n  { value: \"Camarines Norte\", label: \"Camarines Norte\" },\r\n  { value: \"Camarines Sur\", label: \"Camarines Sur\" },\r\n  { value: \"Camiguin\", label: \"Camiguin\" },\r\n  { value: \"Capiz\", label: \"Capiz\" },\r\n  { value: \"Catanduanes\", label: \"Catanduanes\" },\r\n  { value: \"Cavite\", label: \"Cavite\" },\r\n  { value: \"Cebu\", label: \"Cebu\" },\r\n  { value: \"Cotabato\", label: \"Cotabato\" },\r\n  { value: \"Davao de Oro\", label: \"Davao de Oro\" },\r\n  { value: \"Davao del Norte\", label: \"Davao del Norte\" },\r\n  { value: \"Davao del Sur\", label: \"Davao del Sur\" },\r\n  { value: \"Davao Occidental\", label: \"Davao Occidental\" },\r\n  { value: \"Davao Oriental\", label: \"Davao Oriental\" },\r\n  { value: \"Dinagat Islands\", label: \"Dinagat Islands\" },\r\n  { value: \"Eastern Samar\", label: \"Eastern Samar\" },\r\n  { value: \"Guimaras\", label: \"Guimaras\" },\r\n  { value: \"Ifugao\", label: \"Ifugao\" },\r\n  { value: \"Ilocos Norte\", label: \"Ilocos Norte\" },\r\n  { value: \"Ilocos Sur\", label: \"Ilocos Sur\" },\r\n  { value: \"Iloilo\", label: \"Iloilo\" },\r\n  { value: \"Isabela\", label: \"Isabela\" },\r\n  { value: \"Kalinga\", label: \"Kalinga\" },\r\n  { value: \"La Union\", label: \"La Union\" },\r\n  { value: \"Laguna\", label: \"Laguna\" },\r\n  { value: \"Lanao del Norte\", label: \"Lanao del Norte\" },\r\n  { value: \"Lanao del Sur\", label: \"Lanao del Sur\" },\r\n  { value: \"Leyte\", label: \"Leyte\" },\r\n  { value: \"Maguindanao\", label: \"Maguindanao\" },\r\n  { value: \"Marinduque\", label: \"Marinduque\" },\r\n  { value: \"Masbate\", label: \"Masbate\" },\r\n  { value: \"Metro Manila\", label: \"Metro Manila\" },\r\n  { value: \"Misamis Occidental\", label: \"Misamis Occidental\" },\r\n  { value: \"Misamis Oriental\", label: \"Misamis Oriental\" },\r\n  { value: \"Mountain Province\", label: \"Mountain Province\" },\r\n  { value: \"Negros Occidental\", label: \"Negros Occidental\" },\r\n  { value: \"Negros Oriental\", label: \"Negros Oriental\" },\r\n  { value: \"Northern Samar\", label: \"Northern Samar\" },\r\n  { value: \"Nueva Ecija\", label: \"Nueva Ecija\" },\r\n  { value: \"Nueva Vizcaya\", label: \"Nueva Vizcaya\" },\r\n  { value: \"Occiedental Mindoro\", label: \"Occiedental Mindoro\" },\r\n  { value: \"Oriental Mindoro\", label: \"Oriental Mindoro\" },\r\n  { value: \"Palawan\", label: \"Palawan\" },\r\n  { value: \"Pampanga\", label: \"Pampanga\" },\r\n  { value: \"Pangasinan\", label: \"Pangasinan\" },\r\n  { value: \"Quezon\", label: \"Quezon\" },\r\n  { value: \"Quirino\", label: \"Quirino\" },\r\n  { value: \"Rizal\", label: \"Rizal\" },\r\n  { value: \"Romblon\", label: \"Romblon\" },\r\n  { value: \"Samar\", label: \"Samar\" },\r\n  { value: \"Sarangani\", label: \"Sarangani\" },\r\n  { value: \"Siquijor\", label: \"Siquijor\" },\r\n  { value: \"Sorsogon\", label: \"Sorsogon\" },\r\n  { value: \"South Cotabato\", label: \"South Cotabato\" },\r\n  { value: \"Southern Leyte\", label: \"Southern Leyte\" },\r\n  { value: \"Sultan Kudarat\", label: \"Sultan Kudarat\" },\r\n  { value: \"Sulu\", label: \"Sulu\" },\r\n  { value: \"Surigao del Norte\", label: \"Surigao del Norte\" },\r\n  { value: \"Surigao del Sur\", label: \"Surigao del Sur\" },\r\n  { value: \"Tarlac\", label: \"Tarlac\" },\r\n  { value: \"Zambales\", label: \"Zambales\" },\r\n  { value: \"Zamboanga del Norte\", label: \"Zamboanga del Norte\" },\r\n  { value: \"Zamboange del Sur\", label: \"Zamboange del Sur\" },\r\n  { value: \"Zamboanga Sibugay\", label: \"Zamboanga Sibugay\" },\r\n];\r\n\r\nconst regions = [\r\n  { value: \"Region I (Ilocos Region)\", label: \"Region I (Ilocos Region)\" },\r\n  { value: \"Region II (Cagayan Valley)\", label: \"Region II (Cagayan Valley)\" },\r\n  { value: \"Region III (Central Luzon)\", label: \"Region III (Central Luzon)\" },\r\n  { value: \"Region IV-A (CALABARZON)\", label: \"Region IV-A (CALABARZON)\" },\r\n  { value: \"Region V (Bicol Region)\", label: \"Region V (Bicol Region)\" },\r\n  {\r\n    value: \"Region VI (Western Visayas)\",\r\n    label: \"Region VI (Western Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region VII (Central Visayas)\",\r\n    label: \"Region VII (Central Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region VIII (Eastern Visayas)\",\r\n    label: \"Region VIII (Eastern Visayas)\",\r\n  },\r\n  {\r\n    value: \"Region IX (Zamboanga Peninsula)\",\r\n    label: \"Region IX (Zamboanga Peninsula)\",\r\n  },\r\n  {\r\n    value: \"Region X (Northern Mindanao)\",\r\n    label: \"Region X (Northern Mindanao)\",\r\n  },\r\n  { value: \"Region XI (SOCCSKSARGEN)\", label: \"Region XI (SOCCSKSARGEN)\" },\r\n  { value: \"Region XIII (Caraga)\", label: \"Region XIII (Caraga)\" },\r\n  {\r\n    value: \"NCR (National Capital Region)\",\r\n    label: \"NCR (National Capital Region)\",\r\n  },\r\n  {\r\n    value: \"CAR (Cordillera Administrative Region)\",\r\n    label: \"CAR (Cordillera Administrative Region)\",\r\n  },\r\n  {\r\n    value: \"BARMM (Bangsamoro Autonomous Region in Muslim Mindanao)\",\r\n    label: \"BARMM (Bangsamoro Autonomous Region in Muslim Mindanao)\",\r\n  },\r\n  { value: \"MIMAROPA Region\", label: \"MIMAROPA Region\" },\r\n];\r\n\r\nconst AddressDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { openPopup, setOpenPopup, onClose } = props;\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      close={handleClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      PaperProps={{ classes: { root: classes.dialog } }}\r\n    >\r\n      <DialogTitle>Update Address</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"houseNo\")}\r\n                    {...field}\r\n                    label=\"House No.\"\r\n                    placeholder=\"House No.\"\r\n                    name=\"houseNo\"\r\n                    id=\"houseNo\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"houseNo\"\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"barangay\")}\r\n                    {...field}\r\n                    label=\"Barangay\"\r\n                    placeholder=\"Barangay\"\r\n                    name=\"barangay\"\r\n                    id=\"barangay\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"barangay\"\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"city\")}\r\n                    {...field}\r\n                    label=\"City/Municipality\"\r\n                    placehoder=\"City/Municipality\"\r\n                    name=\"city\"\r\n                    id=\"city\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"city\"\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <Autocomplete\r\n                    {...register(\"province\")}\r\n                    id=\"province\"\r\n                    options={provinces}\r\n                    getOptionLabel={(option) => option.label}\r\n                    getOptionSelected={(option) => option.value}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        {...field}\r\n                        name=\"province\"\r\n                        label=\"Province\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                      />\r\n                    )}\r\n                  />\r\n                )}\r\n                name=\"province\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"zip\")}\r\n                    {...field}\r\n                    type=\"number\"\r\n                    label=\"Zip\"\r\n                    placeholder=\"Zip\"\r\n                    name=\"zip\"\r\n                    id=\"zip\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"zip\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <Autocomplete\r\n                    {...register(\"region\")}\r\n                    id=\"region\"\r\n                    options={regions}\r\n                    getOptionLabel={(option) => option.label}\r\n                    getOptionSelected={(option) => option.value}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        {...field}\r\n                        name=\"region\"\r\n                        label=\"Region\"\r\n                        placeholder=\"Region\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                      />\r\n                    )}\r\n                  />\r\n                )}\r\n                name=\"region\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container style={{ marginBottom: '30px'}} justifyContent=\"center\">\r\n            <DialogActions >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddressDialog;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\PersonalInfoDialog.jsx",["247","248","249","250","251","252","253","254"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport useStyles from \"../Theme/Styles\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst sexes = [\r\n  {\r\n    value: \"male\",\r\n    label: \"Male\",\r\n  },\r\n  {\r\n    value: \"female\",\r\n    label: \"Female\",\r\n  },\r\n];\r\n\r\nconst PersonalInfoDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { openPopup, setOpenPopup, onClose } = props;\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n\r\n    //await axios.post(\"/registerCitizen\", values);\r\n    // console.log(res.data);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      close={handleClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      PaperProps={{ classes: { root: classes.dialog } }}\r\n    >\r\n      <DialogTitle>Update Personal Information</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <TextField\r\n                  {...register(\"lastname\")}\r\n                  {...field}\r\n                  label=\"Last name\"\r\n                  placeholder=\"Last name\"\r\n                  name=\"lastname\"\r\n                  id=\"lastname\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  readOnly\r\n                  InputProps={{\r\n                    classes: {\r\n                      notchedOutline: classes.input,\r\n                    },\r\n                  }}\r\n                  inputProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"lastname\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <TextField\r\n                  {...register(\"firstname\")}\r\n                  {...field}\r\n                  label=\"First name\"\r\n                  placeholder=\"First name\"\r\n                  name=\"firstname\"\r\n                  id=\"firstname\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    classes: {\r\n                      notchedOutline: classes.input,\r\n                    },\r\n                  }}\r\n                  inputProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"firstname\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <TextField\r\n                  {...register(\"middlename\")}\r\n                  {...field}\r\n                  label=\"Middle name (Optional)\"\r\n                  placeholder=\"Middle name (Optional)\"\r\n                  name=\"middlename\"\r\n                  id=\"middlename\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    classes: {\r\n                      notchedOutline: classes.input,\r\n                    },\r\n                  }}\r\n                  inputProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"middlename\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <TextField\r\n                  {...register(\"suffix\")}\r\n                  {...field}\r\n                  label=\"Suffix (Optional)\"\r\n                  placeholder=\"Suffix (Optional)\"\r\n                  name=\"suffix\"\r\n                  id=\"suffix\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    classes: {\r\n                      notchedOutline: classes.input,\r\n                    },\r\n                  }}\r\n                  inputProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                />\r\n              )}\r\n              control={control}\r\n              name=\"suffix\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <Autocomplete\r\n                  {...register(\"sex\")}\r\n                  id=\"sex\"\r\n                  options={sexes}\r\n                  getOptionLabel={(option) => option.label}\r\n                  getOptionSelected={(option) => option.value}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      {...field}\r\n                      name=\"sex\"\r\n                      label=\"Sex\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  )}\r\n                />\r\n              )}\r\n              name=\"sex\"\r\n              control={control}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item sm={12} xs={12}>\r\n            <Controller\r\n              render={({ field, formState }) => (\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    {...register(\"birthday\")}\r\n                    {...field}\r\n                    format=\"MM/dd/yyyy\"\r\n                    label=\"Birthday\"\r\n                    id=\"birthday\"\r\n                    name=\"birthday\"\r\n                    inputVariant=\"outlined\"\r\n                    KeyboardButtonProps={{\r\n                      color: \"secondary\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              )}\r\n              control={control}\r\n              name=\"birthday\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid\r\n            container\r\n            style={{ marginBottom: \"30px\" }}\r\n            justifyContent=\"center\"\r\n          >\r\n            <DialogActions>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Grid>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PersonalInfoDialog;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ProfileDialogs\\CredentialsDialog.jsx",["255","256","257","258","259","260"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport useStyles from \"../Theme/Styles\";\r\n\r\nconst CredentialsDialog = (props) => {\r\n  const classes = useStyles();\r\n  const { openPopup, setOpenPopup, onClose } = props;\r\n  const { register, handleSubmit, errors, field, formState, control } =\r\n    useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      close={handleClose}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n      PaperProps={{ classes: { root: classes.dialog } }}\r\n    >\r\n      <DialogTitle>Edit Login Credentials</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={3} className={classes.gridMarginBottom}>\r\n            <Grid item sn={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"email\")}\r\n                    {...field}\r\n                    variant=\"outlined\"\r\n                    label=\"Email address\"\r\n                    placeholder=\"Email address\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"email\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item sm={12} xs={12}>\r\n              <Controller\r\n                render={({ field, formState }) => (\r\n                  <TextField\r\n                    {...register(\"password\")}\r\n                    {...field}\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      classes: {\r\n                        notchedOutline: classes.input,\r\n                      },\r\n                    }}\r\n                    inputProps={{\r\n                      className: classes.input,\r\n                    }}\r\n                  />\r\n                )}\r\n                control={control}\r\n                name=\"password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\" style={{ marginBottom: '30px'}} justifyContent=\"center\">\r\n            <DialogActions>\r\n                <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n                >\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Submit\r\n                </Button>\r\n            </DialogActions>\r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CredentialsDialog;\r\n","E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\ExportToolbar\\ExportToolbar.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\UI\\Header\\Header.jsx",[],"E:\\Document\\joshua's folder\\SmartCTZen_2\\view\\src\\components\\Dropzone\\SingleFileDropzone.jsx",["261","262","263","264","265","266","267","268","269"],"import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\n//Dropzone Style\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 13,\r\n  borderColor: \"#000\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#f0f0f3\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\n//Preview Style\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n  justifyContent: 'center'\r\n};\r\n\r\nconst thumb = {\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: '50em',\r\n  height: 'auto',\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n};\r\n\r\nconst SingleFileDropzone = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const {\r\n    acceptedFiles,\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/*, application/pdf\",\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img src={file.preview} style={img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const filepath = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragActive ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  //console.log(files[0].path);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div {...getRootProps({ style })}>\r\n        <input {...getInputProps()} />\r\n        <p>\r\n          Drag 'n' drop some file here, or click to select a file (maximum of 1\r\n          file only)\r\n        </p>\r\n      </div>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n      {/* <div>\r\n        <Document file={async () => await files[0]} onLoadSuccess={onDocumentLoadSuccess}>\r\n          <Page pageNumber={pageNumber} />\r\n        </Document>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleFileDropzone;\r\n",{"ruleId":"270","severity":1,"message":"271","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":27},{"ruleId":"270","severity":1,"message":"274","line":2,"column":45,"nodeType":"272","messageId":"273","endLine":2,"endColumn":51},{"ruleId":"270","severity":1,"message":"275","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":12},{"ruleId":"270","severity":1,"message":"276","line":25,"column":18,"nodeType":"272","messageId":"273","endLine":25,"endColumn":24},{"ruleId":"270","severity":1,"message":"277","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"278","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"277","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"278","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"279","line":28,"column":10,"nodeType":"272","messageId":"273","endLine":28,"endColumn":21},{"ruleId":"270","severity":1,"message":"277","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"278","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":14},{"ruleId":"270","severity":1,"message":"280","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":14},{"ruleId":"270","severity":1,"message":"281","line":9,"column":3,"nodeType":"272","messageId":"273","endLine":9,"endColumn":11},{"ruleId":"270","severity":1,"message":"282","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":13},{"ruleId":"270","severity":1,"message":"283","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":12},{"ruleId":"270","severity":1,"message":"284","line":19,"column":8,"nodeType":"272","messageId":"273","endLine":19,"endColumn":22},{"ruleId":"270","severity":1,"message":"285","line":68,"column":9,"nodeType":"272","messageId":"273","endLine":68,"endColumn":26},{"ruleId":"270","severity":1,"message":"276","line":28,"column":35,"nodeType":"272","messageId":"273","endLine":28,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":28,"column":43,"nodeType":"272","messageId":"273","endLine":28,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":28,"column":50,"nodeType":"272","messageId":"273","endLine":28,"endColumn":59},{"ruleId":"270","severity":1,"message":"276","line":38,"column":35,"nodeType":"272","messageId":"273","endLine":38,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":38,"column":43,"nodeType":"272","messageId":"273","endLine":38,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":38,"column":50,"nodeType":"272","messageId":"273","endLine":38,"endColumn":59},{"ruleId":"270","severity":1,"message":"288","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"289","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":7},{"ruleId":"270","severity":1,"message":"290","line":10,"column":19,"nodeType":"272","messageId":"273","endLine":10,"endColumn":29},{"ruleId":"270","severity":1,"message":"291","line":31,"column":11,"nodeType":"272","messageId":"273","endLine":31,"endColumn":19},{"ruleId":"270","severity":1,"message":"292","line":31,"column":21,"nodeType":"272","messageId":"273","endLine":31,"endColumn":33},{"ruleId":"270","severity":1,"message":"276","line":31,"column":35,"nodeType":"272","messageId":"273","endLine":31,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":31,"column":43,"nodeType":"272","messageId":"273","endLine":31,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":31,"column":50,"nodeType":"272","messageId":"273","endLine":31,"endColumn":59},{"ruleId":"270","severity":1,"message":"293","line":31,"column":61,"nodeType":"272","messageId":"273","endLine":31,"endColumn":68},{"ruleId":"270","severity":1,"message":"279","line":28,"column":10,"nodeType":"272","messageId":"273","endLine":28,"endColumn":21},{"ruleId":"270","severity":1,"message":"288","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"294","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":13},{"ruleId":"270","severity":1,"message":"288","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"294","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":13},{"ruleId":"270","severity":1,"message":"288","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":9},{"ruleId":"270","severity":1,"message":"295","line":9,"column":10,"nodeType":"272","messageId":"273","endLine":9,"endColumn":17},{"ruleId":"270","severity":1,"message":"290","line":9,"column":19,"nodeType":"272","messageId":"273","endLine":9,"endColumn":29},{"ruleId":"270","severity":1,"message":"296","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"297","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":7},{"ruleId":"270","severity":1,"message":"298","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":7},{"ruleId":"270","severity":1,"message":"299","line":12,"column":25,"nodeType":"272","messageId":"273","endLine":12,"endColumn":35},{"ruleId":"270","severity":1,"message":"300","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":22},{"ruleId":"270","severity":1,"message":"276","line":32,"column":18,"nodeType":"272","messageId":"273","endLine":32,"endColumn":24},{"ruleId":"270","severity":1,"message":"279","line":53,"column":10,"nodeType":"272","messageId":"273","endLine":53,"endColumn":21},{"ruleId":"270","severity":1,"message":"301","line":4,"column":32,"nodeType":"272","messageId":"273","endLine":4,"endColumn":45},{"ruleId":"270","severity":1,"message":"301","line":4,"column":32,"nodeType":"272","messageId":"273","endLine":4,"endColumn":45},{"ruleId":"270","severity":1,"message":"302","line":30,"column":8,"nodeType":"272","messageId":"273","endLine":30,"endColumn":13},{"ruleId":"270","severity":1,"message":"303","line":105,"column":9,"nodeType":"272","messageId":"273","endLine":105,"endColumn":16},{"ruleId":"270","severity":1,"message":"279","line":111,"column":10,"nodeType":"272","messageId":"273","endLine":111,"endColumn":21},{"ruleId":"270","severity":1,"message":"304","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"270","severity":1,"message":"296","line":1,"column":28,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"288","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":9},{"ruleId":"270","severity":1,"message":"305","line":13,"column":3,"nodeType":"272","messageId":"273","endLine":13,"endColumn":12},{"ruleId":"270","severity":1,"message":"294","line":17,"column":8,"nodeType":"272","messageId":"273","endLine":17,"endColumn":13},{"ruleId":"270","severity":1,"message":"299","line":1,"column":23,"nodeType":"272","messageId":"273","endLine":1,"endColumn":33},{"ruleId":"270","severity":1,"message":"304","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":26},{"ruleId":"270","severity":1,"message":"294","line":20,"column":8,"nodeType":"272","messageId":"273","endLine":20,"endColumn":13},{"ruleId":"270","severity":1,"message":"306","line":23,"column":8,"nodeType":"272","messageId":"273","endLine":23,"endColumn":23},{"ruleId":"270","severity":1,"message":"307","line":167,"column":22,"nodeType":"272","messageId":"273","endLine":167,"endColumn":34},{"ruleId":"270","severity":1,"message":"276","line":168,"column":35,"nodeType":"272","messageId":"273","endLine":168,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":168,"column":43,"nodeType":"272","messageId":"273","endLine":168,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":168,"column":50,"nodeType":"272","messageId":"273","endLine":168,"endColumn":59},{"ruleId":"270","severity":1,"message":"308","line":171,"column":9,"nodeType":"272","messageId":"273","endLine":171,"endColumn":21},{"ruleId":"270","severity":1,"message":"309","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":12},{"ruleId":"270","severity":1,"message":"310","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":13},{"ruleId":"270","severity":1,"message":"307","line":146,"column":22,"nodeType":"272","messageId":"273","endLine":146,"endColumn":34},{"ruleId":"270","severity":1,"message":"276","line":147,"column":35,"nodeType":"272","messageId":"273","endLine":147,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":147,"column":43,"nodeType":"272","messageId":"273","endLine":147,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":147,"column":50,"nodeType":"272","messageId":"273","endLine":147,"endColumn":59},{"ruleId":"270","severity":1,"message":"309","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":12},{"ruleId":"270","severity":1,"message":"310","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":13},{"ruleId":"270","severity":1,"message":"307","line":36,"column":22,"nodeType":"272","messageId":"273","endLine":36,"endColumn":34},{"ruleId":"270","severity":1,"message":"292","line":37,"column":21,"nodeType":"272","messageId":"273","endLine":37,"endColumn":33},{"ruleId":"270","severity":1,"message":"276","line":37,"column":35,"nodeType":"272","messageId":"273","endLine":37,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":37,"column":43,"nodeType":"272","messageId":"273","endLine":37,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":37,"column":50,"nodeType":"272","messageId":"273","endLine":37,"endColumn":59},{"ruleId":"270","severity":1,"message":"311","line":40,"column":9,"nodeType":"272","messageId":"273","endLine":40,"endColumn":17},{"ruleId":"270","severity":1,"message":"309","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":12},{"ruleId":"270","severity":1,"message":"310","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":13},{"ruleId":"270","severity":1,"message":"307","line":18,"column":22,"nodeType":"272","messageId":"273","endLine":18,"endColumn":34},{"ruleId":"270","severity":1,"message":"276","line":19,"column":35,"nodeType":"272","messageId":"273","endLine":19,"endColumn":41},{"ruleId":"270","severity":1,"message":"286","line":19,"column":43,"nodeType":"272","messageId":"273","endLine":19,"endColumn":48},{"ruleId":"270","severity":1,"message":"287","line":19,"column":50,"nodeType":"272","messageId":"273","endLine":19,"endColumn":59},{"ruleId":"270","severity":1,"message":"312","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":18},{"ruleId":"270","severity":1,"message":"313","line":3,"column":20,"nodeType":"272","messageId":"273","endLine":3,"endColumn":24},{"ruleId":"270","severity":1,"message":"314","line":69,"column":10,"nodeType":"272","messageId":"273","endLine":69,"endColumn":18},{"ruleId":"270","severity":1,"message":"315","line":70,"column":10,"nodeType":"272","messageId":"273","endLine":70,"endColumn":20},{"ruleId":"270","severity":1,"message":"316","line":70,"column":22,"nodeType":"272","messageId":"273","endLine":70,"endColumn":35},{"ruleId":"270","severity":1,"message":"317","line":92,"column":9,"nodeType":"272","messageId":"273","endLine":92,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":99,"column":9,"nodeType":"320","endLine":99,"endColumn":47},{"ruleId":"270","severity":1,"message":"321","line":104,"column":9,"nodeType":"272","messageId":"273","endLine":104,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":117,"column":5,"nodeType":"324","endLine":117,"endColumn":47,"suggestions":"325"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'auth' is defined but never used.","'errors' is assigned a value but never used.","'Avatar' is defined but never used.","'ButtonGroup' is defined but never used.","'privateData' is assigned a value but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'clsx' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'field' is assigned a value but never used.","'formState' is assigned a value but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Controller' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'axios' is defined but never used.","'useForm' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'makeStyles' is defined but never used.","'RegisterDialog' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'CloudUploadIcon' is defined but never used.","'setOpenPopup' is assigned a value but never used.","'CustomPopper' is assigned a value but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'onSubmit' is assigned a value but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'numPages' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","'onDocumentLoadSuccess' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'filepath' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'isDragAccept'. Either exclude it or remove the dependency array.","ArrayExpression",["326"],{"desc":"327","fix":"328"},"Update the dependencies array to be: [isDragActive, isDragReject]",{"range":"329","text":"330"},[2476,2518],"[isDragActive, isDragReject]"]